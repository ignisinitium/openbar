metadata:
  title: Cron test 2
---
mandatory: True
code: |
  multi_user = True
  allow_cron = True
  status = 'normal'
  counter = 0
---
initial: True
code: |
  counter += 1
  process_action()
---
event: cron_hourly
code: |
  response("Cron hourly was called.  Counter is " + str(counter) + ".  Last access minutes is " + str(last_access_minutes()) + ".  Last access days is " + str(last_access_days()) + ".  Last access hours is " + str(last_access_hours()) + ".")
---
event: cron_daily
code: |
  import sys
  sys.stderr.write("Should delete this.\n")
  command('exit')
---
event: set_status
code: |
  if 'status' in action_arguments():
    status = action_argument('status')
  response(status)
---
mandatory: True
question: |
  The current status is ${ status } and the counter is ${ counter }.
subquestion: |
  Minutes since last access: ${ last_access_minutes() }
  
  Set the status to:

  * [normal](${ interview_url_action('set_status', status='normal') })
  * [danger](${ interview_url_action('set_status', status='danger') })
  * [critical](${ interview_url_action('set_status', status='critical') })

  To read the status without changing it, use:

  * [this](${ interview_url_action('set_status') })
